<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>marcin-chwedczuk.github.io/</title>
   
   <link>http://blog.marcinchwedczuk.pl</link>
   <description>A place where I share my thoughts about programming.</description>
   <language>en-uk</language>
   <managingEditor>mc</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>FabGL PCEmulator na ESP32</title>
	  <link>http://blog.marcinchwedczuk.pl/fabgl-pcemulator-na-esp32</link>
	  <author>mc</author>
	  <pubDate>2021-08-19T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/fabgl-pcemulator-na-esp32</guid>
	
		<description>&lt;p&gt;Jakieś dwa tygodnie temu natknąłem się na artykuł
&lt;a href=&quot;https://hackaday.com/2021/07/28/emulating-the-ibm-pc-on-an-esp32/&quot;&gt;Emulating the IBM PC on an ESP32&lt;/a&gt;.
Opisano w nim bibliotekę FabGL, stworzoną przez pana Fabrizio Di Vittorio,
oraz kilka bazujących na niej projektów.
Sama biblioteka przeznaczona jest do użytku z mikrokontrolerami z rodziny
ESP32 i pozwala na programowe generowanie sygnału wideo (VGA) oraz
obsługę myszki i klawiatury poprzez (bardzo popularne jeszcze 20 lat temu) złącze PS/2.
Wśród projektów zbudowanych z wykorzystaniem tej biblioteki znajdziemy
emulatory takich maszyn jak Altair 8800, Commodore (VIC 20) czy w końcu tytułowy IBM PC.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Minikomputer 8085 - Część II</title>
	  <link>http://blog.marcinchwedczuk.pl/minikomputer-8085-czesc-II</link>
	  <author>mc</author>
	  <pubDate>2020-09-29T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/minikomputer-8085-czesc-II</guid>
	
		<description>&lt;p&gt;W &lt;a href=&quot;minikomputer-8085-czesc-I&quot;&gt;poprzednim&lt;/a&gt; wpisie udało nam się zbudować działający minikomputer oraz uruchomić
na nim napisany przez Davida Huntera monitor. Dla przypomnienia zbudowana przeze mnie
maszyna wyglądała następująco:
&lt;img src=&quot;assets/images/2020-09-29/comp1.jpeg&quot; alt=&quot;Minikomputer wyłaniający się z chaosu&quot; /&gt;
Podczas kilku kolejnych godzin pracy z komputerem, szybko okazało się że taka plątanina
przewodów znacznie utrudnia debugowanie i rozwiązywanie problemów.
Co gorsza przewody połączeniowe nie zapewniały dobrej jakości połączeń pomiędzy układami scalonymi.
W efekcie komputer potrafił nie startować lub zawieszał się podczas wykonywania programów.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Minikomputer 8085 - Część I</title>
	  <link>http://blog.marcinchwedczuk.pl/minikomputer-8085-czesc-I</link>
	  <author>mc</author>
	  <pubDate>2020-09-20T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/minikomputer-8085-czesc-I</guid>
	
		<description>&lt;p&gt;Już od dłuższego czasu myślałem o tym żeby zbudować swój własny minikomputer.
W internecie można znaleźć mnóstwo tego typu projektów, z moich ulubionych
mogę wymienić oparty na procesorze 6502 &lt;a href=&quot;https://eater.net/6502&quot;&gt;komputer autorstwa Bena Eatera&lt;/a&gt;
oraz oparty na CPU Intela &lt;a href=&quot;http://www.malinov.com/Home/sergeys-projects/minimax8085&quot;&gt;MiniMax8085 Sergieja Malinova&lt;/a&gt;.
Mój minikomputer
postanowiłem jednak oprzeć na artykule opublikowanym na łamach czasopisma &lt;a href=&quot;https://www.nutsvolts.com/&quot;&gt;Nuts and Volts&lt;/a&gt;,
autorstwa Davida Huntera. Dokładniej chodzi o artykuł
&lt;a href=&quot;https://www.nutsvolts.com/magazine/article/build-a-pocket-sized-altair-computer&quot;&gt;Build a pocket-sized ALTAIR computer&lt;/a&gt;
z początku 2019 roku.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Cierpienia młodego Wertera czyli algorytm alfa-beta dla gry kółko i krzyżyk</title>
	  <link>http://blog.marcinchwedczuk.pl/cierpienia-mlodego-wertera</link>
	  <author>mc</author>
	  <pubDate>2020-08-06T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/cierpienia-mlodego-wertera</guid>
	
		<description>&lt;p&gt;W tym wpisie przyjrzymy się trudnościom które występują podczas
implementacji algorytmu alfa-beta dla gry kółko i krzyżyk.
Nie będę tutaj omawiał samego algorytmu, gdyż został on już dobrze
opisany w wielu innych miejscach, między innymi na
&lt;a href=&quot;http://wazniak.mimuw.edu.pl/index.php?title=Sztuczna_inteligencja/SI_Modu%C5%82_8_-_Gry_dwuosobowe&quot;&gt;Ważniaku&lt;/a&gt;.
Zamiast tego skoncentrujemy się na technikach debugowania które można
będzie wykorzystać również przy innych grach np. warcabach.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Jak zacząć przygodę z elektroniką</title>
	  <link>http://blog.marcinchwedczuk.pl/jak-zaczac-przygode-z-elektronika</link>
	  <author>mc</author>
	  <pubDate>2019-12-30T01:00:01+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/jak-zaczac-przygode-z-elektronika</guid>
	
		<description>&lt;p&gt;Parę miesięcy temu postanowiłem powrócić do mojego
hobby z czasów dzieciństwa: elektroniki.
Powrót, po ponad dziesięciu latach przerwy, okazał
się być trudniejszy niż przypuszczałem,
a droga do pierwszego działającego układu 
pełna frustracji i porażek.&lt;/p&gt;

</description>
	
	</item>


</channel>
</rss>
