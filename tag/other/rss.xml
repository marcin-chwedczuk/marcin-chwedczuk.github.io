<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>marcin-chwedczuk.github.io/</title>
   
   <link>http://localhost:4000</link>
   <description>A place where I share my thoughts about programming.</description>
   <language>en-uk</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Converting .dsl files to Kindle dictionaries</title>
	  <link>//converting-dsl-files-to-kindle-dictionary</link>
	  <author></author>
	  <pubDate>2019-12-02T01:00:01+01:00</pubDate>
	  <guid>//converting-dsl-files-to-kindle-dictionary</guid>
	  <description><![CDATA[
	     <p>In this post, I will describe how to convert dictionaries
in <a href="http://lingvo.helpmax.net/en/troubleshooting/dsl-compiler/dsl-dictionary-structure/">ABBYY Lingvo’s format</a>
to <code class="highlighter-rouge">mobi</code> dictionaries that can work with Kindle.</p>

<p>I will assume that you already have appropriate <code class="highlighter-rouge">.dsl</code> files.
The first step is to make sure that <code class="highlighter-rouge">.dsl</code> files use UTF-8 encoding.
We may check a file encoding using <code class="highlighter-rouge">file</code> command:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>file dict.dsl 
dict.dsl: Little-endian UTF-16 Unicode text, with CRLF line terminators</code></pre></figure>

<p>If you see something different than <code class="highlighter-rouge">UTF-8 Unicode (with BOM)</code>,
as in the above example, then you have to convert the files to UTF-8
first. We may use <code class="highlighter-rouge">iconv</code> for this purpose:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">iconv <span class="nt">-f</span> UTF-16LE <span class="nt">-t</span> UTF-8 dict.dsl <span class="nt">-o</span> dict-utf8.dsl</code></pre></figure>

<p>We need to make sure that <code class="highlighter-rouge">.dsl</code> files does not
contain metadata info (lines starting with <code class="highlighter-rouge">#</code> at the
beginning of the file):</p>

<figure class="highlight"><pre><code class="language-nohighlight" data-lang="nohighlight">#NAME "Foo Dictionary"                                        
#INDEX_LANGUAGE "Russian"                                                
#CONTENTS_LANGUAGE  "Polish"                                             
а
...</code></pre></figure>

<p>If you see lines starting with <code class="highlighter-rouge">#</code> as in the above example, please
remove them.</p>

<p>Next we need to grab <code class="highlighter-rouge">dsl2mobi</code>:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">git clone https://github.com/Tvangeste/dsl2mobi.git

<span class="c"># Do I have ruby?</span>
ruby <span class="nt">-v</span>
<span class="nb">sudo </span>apt install ruby</code></pre></figure>

<p>You need to have <code class="highlighter-rouge">ruby</code> installed on your machine for the script
to work. Actually I don’t like running someone else’s code
on my machine, so I ran the script inside a virtual machine
(which, for security reasons, I also recommend you to do).</p>

<p>Now we can execute the script:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cd </span>dsl2mobi
chmod +x ./dsl2mobi.rb

./dsl2mobi.rb <span class="nt">-w</span> ./wordforms/forms-RU.txt <span class="se">\</span>
 <span class="nt">-i</span> ~/path-to/dict-utf8.dsl <span class="se">\</span>
 <span class="nt">-o</span> ~/output-dir</code></pre></figure>

<p>In a lot of languages, the same word can occur in 
different forms, for example 
in English the word “write” can occur in forms: wrote, written, writes.
We want our dictionary to recognize all these variations,
and for this reason we need the so called <em>wordforms</em>.
Fortunately for us <code class="highlighter-rouge">dsl2mobi</code> comes with a buildin
wordforms files for several languages.
If you want to create a dictionary from e.g. Russian to
Polish you need to use Russian wordforms (as in our example).
If you want to create a dictionary from English to Russian
you would need to use English wordforms, etc.</p>

<p><code class="highlighter-rouge">dsl2mobi</code> should create at least two files in the
<code class="highlighter-rouge">output-dir</code>, one with <code class="highlighter-rouge">.html</code> extension (containing
actual content) and one with <code class="highlighter-rouge">.opf</code>
extension (containing metadata).</p>

<p>Next we need to 
<a href="https://www.amazon.com/gp/feature.html?ie=UTF8&amp;docId=1000765211">grab KindleGen from Amazon</a>
to actually generate <code class="highlighter-rouge">mobi</code> files:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">./kindlegen  ~/output-dir/dict.opf <span class="nt">-o</span> dict.mobi <span class="nt">-verbose</span> <span class="nt">-c2</span></code></pre></figure>

<p>We use <code class="highlighter-rouge">-c2</code> option to compress the dictionary.</p>

<p>Unfortunately, in my case <code class="highlighter-rouge">kindlegen</code> does not wanted to
convert <code class="highlighter-rouge">.opf</code> file generated by <code class="highlighter-rouge">dsl2mobi</code>.
To make it work, I needed to edit my <code class="highlighter-rouge">.opf</code> file to:</p>

<figure class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version="1.0"?&gt;&lt;!DOCTYPE package SYSTEM "oeb1.ent"&gt;</span>
<span class="nt">&lt;package</span> <span class="na">unique-identifier=</span><span class="s">"uid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;metadata&gt;</span>
    <span class="nt">&lt;dc-metadata</span> <span class="na">xmlns:dc=</span><span class="s">"http://purl.org/metadata/dublin_core"</span> <span class="na">xmlns:oebpackage=</span><span class="s">"http://openebook.org/namespaces/oeb-package/1.0/"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;dc:Identifier</span> <span class="na">id=</span><span class="s">"uid"</span><span class="nt">&gt;</span>dic<span class="nt">&lt;/dc:Identifier&gt;</span>
      <span class="c">&lt;!-- Title of the document --&gt;</span>
      <span class="nt">&lt;dc:Title&gt;</span>Ru-Pl Dictionary<span class="nt">&lt;/dc:Title&gt;</span>
      <span class="nt">&lt;dc:Language&gt;</span>ru<span class="nt">&lt;/dc:Language&gt;</span>
      <span class="nt">&lt;dc:Subject</span> <span class="na">BASICCode=</span><span class="s">"REF008000"</span><span class="nt">&gt;</span>Dictionaries<span class="nt">&lt;/dc:Subject&gt;</span>
      <span class="nt">&lt;dc:Creator&gt;</span>linuxboy<span class="nt">&lt;/dc:Creator&gt;</span>
      <span class="nt">&lt;dc:Publisher&gt;</span>pinguin<span class="nt">&lt;/dc:Publisher&gt;</span>
      <span class="nt">&lt;dc:Description&gt;</span>Generated by Dsl2Mobi-1.2-dev on 2019-11-28.<span class="nt">&lt;/dc:Description&gt;</span>
    <span class="nt">&lt;/dc-metadata&gt;</span>
    <span class="nt">&lt;x-metadata&gt;</span>
      <span class="nt">&lt;output</span> <span class="na">encoding=</span><span class="s">"utf-8"</span> <span class="na">content-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;DictionaryInLanguage&gt;</span>ru<span class="nt">&lt;/DictionaryInLanguage&gt;</span>
      <span class="nt">&lt;DictionaryOutLanguage&gt;</span>pl<span class="nt">&lt;/DictionaryOutLanguage&gt;</span>
    <span class="nt">&lt;/x-metadata&gt;</span>
  <span class="nt">&lt;/metadata&gt;</span>

  <span class="c">&lt;!-- list of all the files needed to produce the .mobi file --&gt;</span>
  <span class="nt">&lt;manifest&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">id=</span><span class="s">"item1"</span> <span class="na">media-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="na">href=</span><span class="s">"dict.html"</span><span class="nt">&gt;&lt;/item&gt;</span>
  <span class="nt">&lt;/manifest&gt;</span>

  <span class="c">&lt;!-- list of the html files in the correct order  --&gt;</span>
  <span class="nt">&lt;spine&gt;</span>
    <span class="nt">&lt;itemref</span> <span class="na">idref=</span><span class="s">"item1"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/spine&gt;</span>

  <span class="nt">&lt;tours/&gt;</span>
  <span class="nt">&lt;guide&gt;</span>
   <span class="nt">&lt;reference</span> <span class="na">type=</span><span class="s">"toc"</span> <span class="na">title=</span><span class="s">"Table of Contents"</span> <span class="na">href=</span><span class="s">"dict.html#toc"</span><span class="nt">&gt;&lt;/reference&gt;</span>
  <span class="nt">&lt;/guide&gt;</span>
<span class="nt">&lt;/package&gt;</span></code></pre></figure>

<p>Also make that <code class="highlighter-rouge">DictionaryInLanguage</code> and <code class="highlighter-rouge">DictionaryOutLanguage</code>
tags have proper values, otherwise your dict may not work
on Kindle.</p>

<p>I also had to change the beginning of the <code class="highlighter-rouge">dict.html</code> file to:</p>

<figure class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;html</span> <span class="na">xmlns:idx=</span><span class="s">"www.mobipocket.com"</span> <span class="na">xmlns:mbp=</span><span class="s">"www.mobipocket.com"</span> <span class="na">xmlns:xlink=</span><span class="s">"http://www.w3.org/1999/xlink"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"dic.css"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"Content-Type"</span> <span class="na">content=</span><span class="s">"text/html;charset=UTF-8"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;title&gt;&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;center&gt;</span>
      <span class="nt">&lt;h1&gt;</span>Generated by Dsl2Mobi-1.2-dev<span class="nt">&lt;/h1&gt;</span>
      <span class="nt">&lt;hr</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/center&gt;</span>
    <span class="nt">&lt;mbp:pagebreak</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">name=</span><span class="s">"toc"</span><span class="nt">&gt;&lt;/a&gt;</span>
    <span class="nt">&lt;mbp:pagebreak</span> <span class="nt">/&gt;</span>

<span class="c">&lt;!-- DICTIONARY ENTRIES --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">name=</span><span class="s">"#а"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;idx:entry</span> <span class="na">name=</span><span class="s">"word"</span> <span class="na">scriptable=</span><span class="s">"yes"</span><span class="nt">&gt;</span>
<span class="nt">&lt;font</span> <span class="na">size=</span><span class="s">"6"</span> <span class="na">color=</span><span class="s">"#002984"</span><span class="nt">&gt;&lt;b&gt;&lt;idx:orth&gt;</span>а
<span class="nt">&lt;/idx:orth&gt;&lt;/b&gt;&lt;/font&gt;</span>
<span class="nt">&lt;idx:orth</span> <span class="na">value=</span><span class="s">"a"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"dsl_m0"</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">"dsl_p"</span><span class="nt">&gt;&lt;i&gt;&lt;font</span> <span class="na">color=</span><span class="s">"green"</span><span class="nt">&gt;</span>Spójnik<span class="nt">&lt;/font&gt;&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;</span>
...</code></pre></figure>

<p>After these changes I was able to generate a <code class="highlighter-rouge">.mobi</code> file that
worked perfectly with my Kindle.</p>

<p>If your dictionary is really huge (the <code class="highlighter-rouge">.html</code> file bigger than 20MB),
KindleGen may either take a lot of time (a few hours) or
it may not finish at all.
In this case I advice you to split, the single <code class="highlighter-rouge">.html</code> files
into three or four smaller files (each should be less than 20MB),
and then to add them as “chapters” to the <code class="highlighter-rouge">.opf</code> file:</p>

<figure class="highlight"><pre><code class="language-xml" data-lang="xml">  <span class="c">&lt;!-- list of all the files needed to produce the .mobi file --&gt;</span>
  <span class="nt">&lt;manifest&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">id=</span><span class="s">"item1"</span> <span class="na">media-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="na">href=</span><span class="s">"dict-1.html"</span><span class="nt">&gt;&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">id=</span><span class="s">"item2"</span> <span class="na">media-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="na">href=</span><span class="s">"dict-2.html"</span><span class="nt">&gt;&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">id=</span><span class="s">"item3"</span> <span class="na">media-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="na">href=</span><span class="s">"dict-3.html"</span><span class="nt">&gt;&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">id=</span><span class="s">"item4"</span> <span class="na">media-type=</span><span class="s">"text/x-oeb1-document"</span> <span class="na">href=</span><span class="s">"dict-4.html"</span><span class="nt">&gt;&lt;/item&gt;</span>
  <span class="nt">&lt;/manifest&gt;</span>

  <span class="c">&lt;!-- list of the html files in the correct order  --&gt;</span>
  <span class="nt">&lt;spine&gt;</span>
    <span class="nt">&lt;itemref</span> <span class="na">idref=</span><span class="s">"item1"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;itemref</span> <span class="na">idref=</span><span class="s">"item2"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;itemref</span> <span class="na">idref=</span><span class="s">"item3"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;itemref</span> <span class="na">idref=</span><span class="s">"item4"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/spine&gt;</span></code></pre></figure>

<p>You can use <code class="highlighter-rouge">wc</code>, <code class="highlighter-rouge">head</code> and <code class="highlighter-rouge">tail</code> for the splitting:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cat </span>dict.html | wc <span class="nt">-l</span>
1792747
<span class="nv">$ </span><span class="nb">echo</span> <span class="k">$((</span><span class="m">1792747</span> <span class="o">/</span> <span class="m">2</span><span class="k">))</span>
896373
<span class="nv">$ </span><span class="nb">cat </span>dict.html | head <span class="nt">-n</span> 896373 <span class="o">&gt;</span> dict-1-2.html
<span class="nv">$ </span><span class="nb">cat </span>dict.html | tail <span class="nt">-n</span> +896373 <span class="o">&gt;</span> dict-3-4.html
<span class="c"># Split files one more time to have four parts</span></code></pre></figure>

<p>Then you have to use <code class="highlighter-rouge">vim</code> or other editor to make sure that
all files have proper <code class="highlighter-rouge">&lt;head&gt;</code> sections, and
are properly ended with <code class="highlighter-rouge">&lt;/body&gt;&lt;/html&gt;</code>.
You will also have to make sure that dictionary
entries are not split across the files.
They are quite easy to recognize, as they
usually start with <code class="highlighter-rouge">&lt;a&gt;</code> tag followed by <code class="highlighter-rouge">&lt;idx:entry&gt;</code> tag.</p>

<p>KindleGen needed around 1h of time to convert 80MB
split into four parts, so be prepared to wait for a bit.</p>


	  ]]></description>
	</item>


</channel>
</rss>
