<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>marcin-chwedczuk.github.io/</title>
   
   <link>http://blog.marcinchwedczuk.pl</link>
   <description>A place where I share my thoughts about programming.</description>
   <language>en-uk</language>
   <managingEditor>mc</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Filtering log lines using exception messages in log4j2</title>
	  <link>http://blog.marcinchwedczuk.pl/filter-by-exception-message-log4j2</link>
	  <author>mc</author>
	  <pubDate>2021-01-25T01:00:01+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/filter-by-exception-message-log4j2</guid>
	
		<description>&lt;p&gt;Recently I needed to filter out messages logged by a bit too verbose library.
This is not too difficult in log4j2 since we can attach filters at &lt;code class=&quot;highlighter-rouge&quot;&gt;Configuration&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;Appender&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Logger&lt;/code&gt; levels:&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Useful JDK tools (part 1)</title>
	  <link>http://blog.marcinchwedczuk.pl/useful-jdk-tools-part-1</link>
	  <author>mc</author>
	  <pubDate>2020-07-10T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/useful-jdk-tools-part-1</guid>
	
		<description>&lt;p&gt;JDK comes with a bunch of handy tools. It’s good to
know about them. In this post we will take a look at
&lt;code class=&quot;highlighter-rouge&quot;&gt;jps&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;jstack&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;jmap&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;jhat&lt;/code&gt;.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Matching regexes using backtracking</title>
	  <link>http://blog.marcinchwedczuk.pl/matching-regexes-using-backtracking</link>
	  <author>mc</author>
	  <pubDate>2020-06-28T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/matching-regexes-using-backtracking</guid>
	
		<description>&lt;p&gt;In this post we will write a simple regex library.
The table below presents regex operators that we are going to support:&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Continuations in Java</title>
	  <link>http://blog.marcinchwedczuk.pl/continuations-in-java</link>
	  <author>mc</author>
	  <pubDate>2020-06-27T02:00:01+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/continuations-in-java</guid>
	
		<description>&lt;p&gt;CSP or Continuation-Passing Style is a style of programming in which
functions return results via callbacks.
For example &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; operator is a function that takes two numbers and
returns their sum. In CSP &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; operator becomes a function that takes
three arguments, two terms and a callback, usually called a continuation in
the context of CSP.
In Java we can express this as:&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Spy JVM network traffic with Owasp ZAP proxy</title>
	  <link>http://blog.marcinchwedczuk.pl/spy-jvm-network-traffic-with-owasp-zap</link>
	  <author>mc</author>
	  <pubDate>2019-01-24T01:00:00+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/spy-jvm-network-traffic-with-owasp-zap</guid>
	
		<description>&lt;p&gt;We start by downloading &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project&quot;&gt;Owasp ZAP proxy&lt;/a&gt;:&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Java streams best practices</title>
	  <link>http://blog.marcinchwedczuk.pl/java-streams-best-practices</link>
	  <author>mc</author>
	  <pubDate>2017-11-08T01:00:00+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/java-streams-best-practices</guid>
	
		<description>&lt;p&gt;In this short post I am going to present Java 8 streams 
best practices. Most of them either I figured out myself or
learned from my colleagues.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Hibernate HHH000179 warning&#58 Narrowing proxy to class this operation breaks ==</title>
	  <link>http://blog.marcinchwedczuk.pl/HHH000179-narrowing-proxy-to-class-this-operation-breaks-equality</link>
	  <author>mc</author>
	  <pubDate>2017-07-30T02:00:00+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/HHH000179-narrowing-proxy-to-class-this-operation-breaks-equality</guid>
	
		<description>&lt;p&gt;In this post I will explain why Hibernate is generating the HHH000179
warning and when ignoring it may introduce bugs in your code.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Debugging OpenJDK 8 with NetBeans on Ubuntu</title>
	  <link>http://blog.marcinchwedczuk.pl/debugging-openjdk8-with-netbeans-on-ubuntu</link>
	  <author>mc</author>
	  <pubDate>2017-06-24T02:00:00+02:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/debugging-openjdk8-with-netbeans-on-ubuntu</guid>
	
		<description>&lt;p&gt;In this post we will learn how to download, compile and debug OpenJDK 8
using Ubuntu and NetBeans IDE.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Zen and the Art of Unit Testing</title>
	  <link>http://blog.marcinchwedczuk.pl/zen-and-the-art-of-unit-testing</link>
	  <author>mc</author>
	  <pubDate>2017-02-19T01:00:00+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/zen-and-the-art-of-unit-testing</guid>
	
		<description>&lt;p&gt;In this blog post we will concern ourselves with unit testing of
classic 3-layer business applications. We will assume that
all business logic lives in services and components,
that these services operate on entities that are stored and retrieved
from relational database, 
and that these entities doesn’t contain any logic.
Moreover we assume usage of 
DTO (&lt;a href=&quot;https://en.wikipedia.org/wiki/Data_transfer_object&quot;&gt;Data Transfer Object&lt;/a&gt;)
to pass data between GUI and application services.&lt;/p&gt;

</description>
	
	</item>

	<item>
	  <title>Hello, Hibernate Validator</title>
	  <link>http://blog.marcinchwedczuk.pl/hello-hibernate-validator</link>
	  <author>mc</author>
	  <pubDate>2017-02-05T01:00:00+01:00</pubDate>
	  <guid>http://blog.marcinchwedczuk.pl/hello-hibernate-validator</guid>
	
		<description>&lt;p&gt;In every enterprise application there is a need for
validation. You may want to validate data send by user to
your REST service, messages coming to your application from some
other system, or your own entities before saving them to database.&lt;/p&gt;

</description>
	
	</item>


</channel>
</rss>
